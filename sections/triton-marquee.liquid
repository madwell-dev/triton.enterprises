{{ 'triton-marquee.css' | asset_url | stylesheet_tag }}

<div class="triton-marquee">
  <h2>
    <div class="container">
      <svg viewBox="0 0 600 300" xmlns="http://www.w3.org/2000/svg">
        <path 
          id="textPathCurve"
          d="M0,165 Q75,145 150,165 T300,165 T450,165 T600,165"
          fill="none"
        />
        <text 
          font-family="metallophile-sp8" 
          font-size="48" 
          font-weight="500" 
          letter-spacing="-0.01em" 
          fill="black" 
          text-anchor="middle"
        >
          <textPath href="#textPathCurve" startOffset="0%">
            {% for i in (1..25) %}
              {{ section.settings.title }}{% if forloop.last == false %} {% endif %}
            {% endfor %}
            <animate attributeName="startOffset" from="0%" to="500%" begin="0s" dur="125s" repeatCount="indefinite"></animate>
          </textPath>
        </text>
      </svg>
      <div class="img-wrapper">
        <img src="{{ 'triton-butterfly.png' | asset_url }}" alt="butterfly" width="1080" height="auto" />
      </div>
    </div>
  </h2>
  <div 
    class="content" 
    data-aos="slide-left" 
    data-aos-duration="1000"
    data-aos-easing="ease-out-sine"
  >
    <p><strong>Selfishly changing the world</strong> through waves, sounds, words, pictures, Fabrics, & Giving.</p>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const imgWrapper = document.querySelector('.img-wrapper');
    const limit = 50;

    function getRandomDirection() {
      const directions = ['up', 'down', 'left', 'right'];
      return directions[Math.floor(Math.random() * directions.length)];
    }

    function moveImage() {
      const direction = getRandomDirection();
      let transformValue;

      switch (direction) {
        case 'up':
          transformValue = `translateY(-${Math.random() * limit}px)`;
          break;
        case 'down':
          transformValue = `translateY(${Math.random() * limit}px)`;
          break;
        case 'left':
          transformValue = `translateX(-${Math.random() * limit}px)`;
          break;
        case 'right':
          transformValue = `translateX(${Math.random() * limit}px)`;
          break;
      }

      imgWrapper.style.transform = transformValue;
    }

    setInterval(moveImage, 500);
  });
</script>

{% schema %}
{
  "name": "Triton marquee",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "GOING INSANE GOING SANE ü¶ã GOING INSANE GOING SANE üå™Ô∏è ",
      "label": "Heading"
    }
  ],
  "presets": [
    {
      "name": "Triton marquee"
    }
  ]
}
{% endschema %}